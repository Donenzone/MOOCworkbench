# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-10-04 11:53
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('UserManager', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GitHubAuth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=100, null=True)),
                ('auth_token', models.CharField(max_length=100, null=True)),
                ('workbench_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='UserManager.WorkbenchUser')),
            ],
        ),
        migrations.CreateModel(
            name='GitRepository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('git_url', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('github_id', models.IntegerField(null=True)),
                ('hooks_url', models.CharField(max_length=100, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserManager.WorkbenchUser')),
                ('subrepos', models.ManyToManyField(blank=True, to='GitManager.GitRepository')),
            ],
        ),
        migrations.CreateModel(
            name='GitRights',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rights', models.CharField(choices=[(0, 'Read'), (1, 'Write'), (2, 'Read/Write')], default=0, max_length=2)),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GitManager.GitRepository')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserManager.WorkbenchUser')),
            ],
        ),
    ]
